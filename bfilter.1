.TH BFILTER "1" "May 2016" "bfilter"

.SH NAME
bfilter \- multinomial Bayesian classifier for emails
.SH SYNOPSIS
\fBbfilter\fP \fBtrain\fP \fIclass\fP < \fIknown-email\fP

\fBbfilter\fP ( \fBclassify\fP | \fBannotate\fP ) < \fIunknown-email\fP

.SH DESCRIPTION

\fBbfilter\fP maintains a dictionary of `terms' (words, email addresses, URL
fragments and so forth) and their occurences in sample emails which have been
separated into classes. It can then use these to judge which class an unknown
email is most likely to belong to.
.TP
One application of \fBbfilter\fP is to classify messages as \fIspam\fP
or \fIreal\fP. However, \fBbfilter\fP has no particular knowledge of spam
characteristics. It can equally well be used to sort email into \fIbusiness\fP
and \fIpersonal\fP categories, it all depends on the training. Nor is it
limited to a two-way classification. Unless you already have a good spam
solution, you might well want to classify emails
as \fIbusiness\fP, \fIpersonal\fP, or \fIspam\fP.
.TP
\fBisspam\fP, \fBisreal\fP
In these modes, \fBbfilter\fP reads emails from standard input in Berkeley
mailspool format (with individual mails separated by `\\n\\nFrom ') and adds the
terms in them to the dictionary, assuming that they are either spam
(\fBisspam\fP) or non-spam (\fBisreal\fP).
.TP
\fBtest\fP
In this mode, \fBbfilter\fP reads a single email from standard input, and forms
an estimate of the probability that it is spam; it then writes the email to
standard output with added \fBX-Spam-Probability:\fP and \fBX-Spam-Words:\fP
headers.
.TP
\fBcleandb\fP
In this mode, \fBbfilter\fP will discard from its database terms which have not
been referenced by any email during the past four weeks. Since the bfilter
database grows large quite quickly, you should run this every so often.
.TP
\fBstats\fP
In this mode, \fBbfilter\fP will print some statistics about its database.
These are mainly of general interest.

.SH USAGE
Assemble a corpus of spam and of non-spam. The latter should include mail that
you've sent. Feed them into \fBbfilter\fP with the appropriate options. Test
the filter on some existing emails to satisfy yourself that it's working. Then
you can feed new emails through \fBbfilter test\fP, and filter on the presence
of a header of the form

.nf
  \fBX-Spam-Probability: YES (p=...)\fP
.fi
.Sp

By default, \fBbfilter\fP uses the file \fB~/.bfildb2\fP for its database of
spam and non-spam terms. You can use the environment variable BFILTER_DB to
specify an alternative database file. (Older versions used \fB~/.bfildb\fP,
which was a database in a different format.)

.SH FILES
.TP
\fB~/.bfildb2\fP
A \fBtdb\fP(3) database which stores the dictionary of terms. You can use an
alternative database by specifying a filename in the environment variable
BFILTER_DB.
.SH SEE ALSO
.BR procmail (1),
.BR tdb (3),
.br
.IR http://ex-parrot.com/~chris/software.html#bfilter ,
.br
.IR http://www.paulgraham.com/spam.html .
.SH AUTHOR
Chris Lightfoot <chris@ex-parrot.com>
.br
.I http://ex-parrot.com/~chris/

Please send me bug reports, patches, adulation and so forth.
.SH COPYRIGHT
Copyright \(co 2003 Chris Lightfoot
.br

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but
\fBwithout any warranty\fP; without even the implied warranty of
\fBmerchantability\fP or \fBfitness for a particular purpose\fP. See the GNU
General Public License for more details.

