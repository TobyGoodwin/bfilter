.TH BFILTER "1" "June 2016" "bfilter"

.SH NAME
bfilter \- multinomial Bayesian classifier for emails

.SH SYNOPSIS
\fBbfilter\fP [\fB-b\fP] \fBtrain\fP \fIclass\fP < \fIknown-email\fP

\fBbfilter\fP [\fB-b\fP] ( \fBclassify\fP | \fBannotate\fP ) < \fIunknown-email\fP

\fBbfilter\fP [\fB-b\fP] \fBuntrain\fP \fIclass\fP < \fIpreviously-trained-email\fP

\fBbfilter\fP [\fB-b\fP] \fBretrain\fP \fIold-class\fP \fInew-class\fP < \fIpreviously-trained-email\fP

\fBbfilter move\fP \fIold-class-name\fP \fInew-class-name\fP

.SH DESCRIPTION
.B Bfilter
is a document classifier for email messages. First it must be trained on
sample messages from different classes. Then it can evaluate new
messages and decide which class they are most likely to belong to.
.PP
One typical application of
.B bfilter
is to classify messages as \fIspam\fP
or \fIreal\fP. However,
.B bfilter
has no inherent knowledge of spam characteristics. It could equally well
be used to sort email into, for example, \fIbusiness\fP and
\fIpersonal\fP classes, provided those were the classes used in
training.
.PP
Nor is \fBbfilter\fP limited to a two-way classification. A
typical application will use \fBbfilter\fP both to identify spam
messages, and to sort the real messages, for example by training
messages from \fI3\fP classes: \fIbusiness\fP, \fIpersonal\fP, and
\fIspam\fP.
.SS Modes
.PP
The
.B bfilter
command has several operation modes. The first command line argument (apart
from options) specifies the mode. The mode may be abbreviated to any
unambiguous prefix, thus you can write
.B bfilter classify
or
.B bfilter class
or just
.BR "bfilter c" ,
all have the same meaning.
.PP
Most operation modes read a single email message from standard input. If the
\fB-b\fP flag is given, they instead read multiple messages in Berkeley
mailspool format.
.TP
\fBtrain\fP \fIclass\fP
In \fBtrain\fP mode, you are asserting that the input email is an instance of
the given class.
.B Bfilter
updates its database accordingly. There is no output.
.TP
.B classify
In this mode,
.B bfilter
reads a single email from standard input, and evaluates which class it is most
likely to belong to. It writes two lines of output: the first is the name of
the deduced class; the second is an integer representing
.BR bfilter 's
confidence in the classification.
See
.I Confidence Estimates
below for more details.
.TP
.B annotate
The
.B annotate
mode is similar to
.B classify
mode, except that
.B bfilter
copies the email to standard output, adding an
.B \f(CWX-Bfilter-Class:\fP
header line at the end of the header. The new header line again contains the
deduced class, and the confidence estimate in parentheses.
.TP
\fBuntrain\fP \fIclass\fP
The \fBuntrain\fP mode undoes the effect of a previous \fBtrain\fP command. See 
.I Untraining
below for more information.
The intended use of
\fBuntrain \fIclass\fP is for the case where you have previous trained a
message as belonging to \fIclass\P, and have since changed your mind and
decided that it does not in fact belong to \fIclass\fP. Currently,
\fBbfilter\fP makes no attempt to ensure that the message had, in fact, been trained 
.TP
\fBretrain\fP \fIold-class new-class\fP
This is equivalent to \fBuntrain \fIold-class\fP followed by \fBtrain
\fInew-class\fP.
.TP
\fBmove\fP \fIold-name new-name\fP
The \fBmove\fP mode can be used to rename an existing class.
.SH FILES
The default database is \fB.bfilter.sqlite\fP in \fB$HOME\fP. An alternate
database can be specified in the \fBBFILTER_DB\fP environment variable.
.SH NOTES
.SS Confidence Estimates
In \fBclassify\fP and \fBannotate\fP modes, \fBbfilter\fP outputs both a
classification and a confidence estimate. The confidence estimate is
non-negative integer: the larger it is, the more confident \fBbfilter\fP is of
the classification. The lowest possible confidence estimate is \fB0\fP
indicating that \fBbfilter\fP's classification is highly uncertain.
.PP
The confidence is scaled to represent an \fIapproximate\fP percentage,
so \fB100\fP represents an extremely confident classification. However,
in the current implementation, the number reported can exceed 100. The
exact mathematical meaning of the confidence estimate is fairly murky,
and this is not the place to delve into it. The way it is calculated
may well change in the future, but it is intended that it will remain an
integer, with \fB0\fP meaning very uncertain, and \fB100\fP very
certain.
.PP
It is strongly suggested that the confidence estimate is used to drive
user interaction. If \fBbfilter\fP classifies a message as \fIspam\fP
with a low confidence (say, less than \fB20\fP), it would be wise to
present the message to the user and ask them to check the
classification. Then train the message according to their input.
.SS Untraining

.SH SEE ALSO
.BR sqlite3 (1),
.br
.IR https://github.com/TobyGoodwin/bfilter .
.SH COPYRIGHT
Copyright \(co 2003, 2004 Chris Lightfoot.
.br
Copyright \(co 2015 - 2016 Toby Goodwin.
.br
toby@paccrat.org
.br
https://github.com/TobyGoodwin/bfilter
.PP
Bfilter is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your
option) any later version.
.PP
Bfilter is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
for more details.
.PP
You should have received a copy of the GNU General Public License along
with bfilter.  If not, see <http://www.gnu.org/licenses/>.
