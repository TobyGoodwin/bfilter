{ fake header}
{this is a test that bfilter correctly elides quoted-printable's "soft eols", that is, the sequence "=\n" is removed, and the lines are joined together. (note that this test doesn't actually claim to be quoted-printable, but bfilter doesn't actually do parsing at that level anyway.}
{Soft EOLs are very common in all sorts of messages, some of them spam, and some of them not, but they can confuse the situation considerably. For one thing, our simple-minded HTML detector will fail if tags are split over lines (not that you need soft EOLs to do that, but many people do). More seriously, soft EOLs allow *words* to be split over lines, which makes bfilter's tokenization routines produce random half-words, which are of no use to man nor beast. It is important that at least one of our test cases includes "lines" which are more than 1000 characters long, as quoted-printable can easily generate such lines, but previous versions of bfilter would not dynamically allocate memory. Let's repeat thientire "line": Soft EOLs are common in many messages, some of them spam, and some of them not, but they can confuse the situation considerably. For one thing, our simple-minded HTML detector will fail if tags are split over lines (not that you need soft EOLs to do that, but many people do). More seriously, soft EOLs allow *words* to be split over lines, which makes bfilter's tokenization routines produce random half-words, which are of no use to man nor beast. It is important that at least one of our test cases includes "lines" which are more than 1000 characters long, as quoted-printable can easily generate such lines, but previous versions of bfilter would not dynamically allocate memory. Let's repeat this line again, it's now something like 1500 characters!}
{Another thing that we need to test: what if there is an = character at the end of the last line?=}
